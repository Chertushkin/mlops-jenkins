// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.fontSize": 13,
		"terminal.integrated.drawBoldTextInBrightColors": false,
		"terminal.integrated.fontFamily": "'SourceCodePro+PowerLine+AwesomeRegular'",
		"editor.fontFamily": "JetBrains Mono, Menlo, Monaco, 'Courier New', monospace",
		"editor.fontSize": 13,
		"window.autoDetectColorScheme": true,
		"workbench.preferredLightColorTheme": "Default Light+",
		// "workbench.preferredDarkColorTheme": "Darcula Pycharm with Light GUI",
		"workbench.preferredDarkColorTheme": "Nord",
		"workbench.editorAssociations": {
			"*.ipynb": "jupyter-notebook"
		},
		"editor.quickSuggestionsDelay": 0,
		"editor.quickSuggestions": {
			"other": true,
			"comments": true,
			"strings": true
		},
		"editor.renderWhitespace": "all",
		"editor.renderControlCharacters": true,
		"editor.rulers": [
			110
		],
		"editor.wordWrap": "on",
		"editor.formatOnSaveMode": "file",
		"editor.formatOnPaste": false,
		"zenMode.fullScreen": true,
		"zenMode.restore": true,
		"zenMode.hideActivityBar": true,
		"zenMode.hideStatusBar": true,
		"typescript.suggest.paths": false,
		"remote.SSH.connectTimeout": 1200,
		"python.languageServer": "Pylance",
		"python.terminal.activateEnvironment": false,
		"python.linting.flake8Enabled": true,
		"python.linting.flake8Args": [
			"--max-line-length=110",
			"--ignore=W293,E302,E266,W391,E402,E226,W291,E116,E502,W503"
		],
		"autoDocstring.quoteStyle": "'''",
		"jupyter.alwaysTrustNotebooks": true,
		"[python]": {
			"editor.defaultFormatter": "ms-python.python"
		},
		"window.restoreFullscreen": true,
		"files.autoSave": "afterDelay",
		"editor.fontLigatures": true,
		"explorer.openEditors.visible": 0,
		"workbench.activityBar.visible": false,
		"python.formatting.provider": "black",
		"editor.minimap.enabled": false,
		"workbench.startupEditor": "welcomePage",
		"notebook.cellToolbarLocation": {
			"default": "right",
			"jupyter-notebook": "left"
		},
		"workbench.colorTheme": "Default Light+",
		"terminal.external.osxExec": "iterm11.app",
		"terminal.integrated.inheritEnv": false,
		"terminal.integrated.tabs.enabled": false,
		"diffEditor.ignoreTrimWhitespace": false
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"k--kato.intellij-idea-keybindings",
		"ms-python.vscode-pylance",
		"magicstack.MagicPython",
		"eamodio.gitlens",
		"mhutchie.git-graph",
		"garytyler.darcula-pycharm"
	]
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "ubuntu"
}